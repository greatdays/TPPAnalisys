@using DeveloperPortal.Domain.ProjectDetail
@model ContactRenderModel

@{
    List<SelectListItem> associationList = new List<SelectListItem>();
    foreach (string item in Model.ContactTypeList)
    {
        associationList.Add(new SelectListItem { Text = item, Value = item });
    }
}
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<form asp-action="SaveContact"
      asp-controller="DevlopepmemtTeam"
      method="post"
      enctype="multipart/form-data"
      id="frmAddNewContact"
      class="formAddNewContact">



    <!-- Modal body -->
    <div class="modal-header">
        <h4 class="modal-title" id="PopupTitle"> Add New Contact</h4>

        <button type="button" class="close" data-bs-dismiss="modal"><i class="far fa-times-circle"></i></button>
    </div>
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.AddContactType)
        @Html.HiddenFor(m => m.CaseID)
        @Html.HiddenFor(m => m.ContactIdentifierID)
        @Html.HiddenFor(m => m.Source)
        @if (Model.ContactId == 0)
        {
            @Html.HiddenFor(m => m.APN)
            @Html.HiddenFor(m => m.ProjectId)
            @Html.HiddenFor(m => m.ProjectSiteId)
            <div class="related-information" style="margin-bottom:0px;display:none">

                @if (Model.ProjectId != 0)
                {
                    <div class="custom-control custom-radio">
                        <input type="radio" class="custom-control-input required-label" data-val="true" data-val-required="Please select contact identifier" id="Project" name="IdentifierType" value="Project" checked>
                        <label class="custom-control-label" for="Project">
                            Project
                        </label>
                    </div>
                }
                @if (Model.ProjectSiteId != 0)
                {
                    <div class="custom-control custom-radio">
                        <input type="radio" class="custom-control-input required-label" data-val="true" data-val-required="Please select contact identifier" id="ProjectSite" name="IdentifierType" value="ProjectSite" checked>
                        <label class="custom-control-label" for="ProjectSite">
                            Project Site
                        </label>
                    </div>
                }

                <br />
                <div class="clearfix"></div>
                @Html.ValidationMessageFor(e => e.IdentifierType, "", new { @class = "text-danger" })

                <div class="related-information identifierDropdown" style="margin-bottom:5px;">
                    <select class="form-control" id="identifierDropdown" name="IdentifierValue"></select>
                    @Html.ValidationMessageFor(e => e.IdentifierValue, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(m => m.IdentifierValue, new { @id = "identifierHiddenText" })
        }
        else
        {
            @Html.HiddenFor(m => m.APN)
            @Html.HiddenFor(m => m.ContactId)
            @Html.HiddenFor(m => m.ContactAddressId)
            @Html.HiddenFor(m => m.OrganizationId)
            @Html.HiddenFor(m => m.PropContactId)
            @Html.HiddenFor(m => m.IdentifierType)
            @Html.HiddenFor(m => m.IdentifierValue)
            @Html.HiddenFor(m => m.ProjectId)
            @Html.HiddenFor(m => m.ProjectSiteId)
        }
        <div class="formdetails">
            <div class="row">

                <div class="col-md-6">
                    <div class="form-group required" id="divAssociationTypes">
                        @Html.Label("Association", "Association", new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Type, associationList, "- Select -", new { @class = "form-control", @aria_label = "Type" })
                        @Html.ValidationMessageFor(e => e.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6" style="display:none" id="divContractorType">
                    <div class="form-group required" >
                        @Html.LabelFor(model => model.ContractorType, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.ContractorType, new List<SelectListItem> { new SelectListItem { Text = "General Contractor", Value = "General Contractor" }, new SelectListItem { Text = "Relocation Contractor", Value = "Relocation Contractor" }, new SelectListItem { Text = "Architect", Value = "Architect" } }, "Select", new { @id = "ContractorType", @class = "form-control notranslate", @lang = "en" })
                        @Html.ValidationMessageFor(model => model.ContractorType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6" style="display:none" id="divCASP">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.CASpNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CASpNumber, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @placeholder = "CASP Number", @aria_required = "true" } })
                        @Html.ValidationMessageFor(model => model.CASpNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-md-4">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group ">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Middle Name" } })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger emailRequire" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", @placeholder = "Company Name" } })
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address Line 1" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address Line 2" } })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", maxlength = 20, @placeholder = "City" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.State, new SelectList(Model.LutStateCDList, "Value", "Text"), "- Select -", new { @class = "form-control", @aria_label = "State" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zip" } })
                        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group required">
                        @Html.LabelFor(model => model.PhoneBusiness, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PhoneBusiness, new { htmlAttributes = new { @class = "form-control", @placeholder = "Business Phone" } })
                        @Html.ValidationMessageFor(model => model.PhoneBusiness, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneExtension, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PhoneExtension, new { htmlAttributes = new { @class = "form-control", @placeholder = "Extension" } })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneCell, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PhoneCell, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cell Phone" } })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal footer -->
    <div class="modal-footer multi-button">
        <button id="btnclose" type="button" data-bs-dismiss="modal" class="btn btn-light">Close</button>
        @if (Model.ContactIdentifierID == 0)
        {
            <button id="btnAdd" type="submit" class="btn btn-primary">Add</button>
        }
        else
        {
            <button id="btnSave" type="submit" class="btn btn-primary">Save</button>
        }
    </div>
</form>

<script>
    $(document).ready(function () {
        DevelopmentTeam.Init();
        $('#PhoneHome').mask('(000) 000-0000');
        $('#PhoneBusiness').mask('(000) 000-0000');
        $('#PhoneCell').mask('(000) 000-0000');
        $('#Zip').mask('00000');
    });


</script>
