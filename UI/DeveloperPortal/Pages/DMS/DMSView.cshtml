@model DMSModel
@using DeveloperPortal.Domain.DMS
@using Newtonsoft.Json

<div class="card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">DMS File Upload</h5>
        <div class="d-flex gap-2">
           
            <button type="button" id="btn-add-file" class="btn btn-primary rounded-0" onclick="DMS.AddDocument()">
                <i class="fas fa-plus"></i> Add Document
            </button>
            &nbsp;
            <button type="button" id="btn-refresh" class="btn btn-light rounded-0" onclick="DMS.ReloadFiles()">
                <i class="fas fa-sync-alt"></i> Refresh
            </button>
        </div>
    </div>


    <div class="table-responsive">
        <table id="dmsDataTable" class="table table-striped table-bordered align-middle w-100">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Filename</th>
                    <th>Category</th>
                    <th>SubCategory</th>
                    <th>Comment</th> @* Corrected header *@
                    <th>Uploader</th>
                   @*  <th>Comment</th> *@
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.FolderModel?.Files != null && Model.FolderModel.Files.Any())
                {
                    foreach (var file in Model.FolderModel.Files)
                    {
                        var driveFileId = !string.IsNullOrEmpty(file.Link) ? file.Link : "";
                        <tr>
                            <td>@file.UploadedDate.ToString("MM/dd/yyyy")</td>
                            <td><span title="@file.Name">@file.Name</span></td>
                            <td>@file.Category</td>
                            <td>@file.SubCategory</td>
                            <td>@file.Comment</td>
                            <td>@file.UploadedBy</td>
                            <td>
                                @if (!string.IsNullOrWhiteSpace(file.Link) && file.Link != "00000000-0000-0000-0000-000000000000")
                                {
                                    <a href="javascript:void(0)"
                                       onclick="downloadFileWithProgress('@Url.Action("DownloadDocument", "DMS", new { fileName = file.Name, filePath = driveFileId })', '@file.Name')"
                                       class="btn k-grid-edit btn-sm btn-action" title="Download @file.Name">
                                        <i class="fas fa-download"></i>
                                    </a>
                                }
                                else
                                {
                                    <span class="text-warning" title="File is being processed">
                                        Please click on Refresh button after 2-3 minutes to see the download icon.
                                    </span>
                                }

                                @if (file.SubCategory == "FloorPlanType")
                                {
                                        <button class="btn btn-sm disabled-link"  type="button">
                                            <i class="fas fa-trash-alt" title="You cannot delete the Floor plan document here. Please go to the Floor Plan tab to delete it."></i>
                                    </button>
                                }
                                    else if (file.SubCategory == "FundingSource" || file.SubCategory== "Funding Source")
                                {
                                        <button class="btn btn-sm disabled-link" type="button">
                                            <i class="fas fa-trash-alt" title="You cannot delete the Funding Source document here. Please go to the Funding Source tab to delete it."></i>
                                    </button>
                               
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-danger btn-delete-file" data-id="@file.DocumentId" data-link="@file.Link" type="button">
                                        <i class="fas fa-trash-alt" title="Delete Document"></i>
                                    </button>
                                }


                                
                            </td>
                        </tr>
                    }
                }
            </tbody>

        </table>
    </div>
    </div>
</div>

@{
    string caseIdFromName = "", projectName = "";

    if (Model?.FolderModel?.Name != null)
    {
        var folderNameParts = Model.FolderModel.Name.Split('_');
        caseIdFromName = folderNameParts.Length > 1 ? folderNameParts[^1] : Convert.ToString(Model.CaseId);
        projectName = folderNameParts.Length > 1 ? folderNameParts[0] : Convert.ToString(Model.CaseId);
    }
    else
    {
        caseIdFromName = Convert.ToString(Model.CaseId);
        projectName = "";
    }
}

<input type="hidden" id="CaseId" value="@Model.CaseId" />
<input type="hidden" id="ProjecId" value="@Model.ProjectId" />
<input type="hidden" id="ProjectName" value="@projectName" />
<input type="hidden" id="FolderName" value="@Model.FolderModel?.Name" />
<input type="hidden" id="FolderId" value="@Model.FolderModel?.Id" />

@await Html.PartialAsync("~/Pages/DMS/_FileUploadModal.cshtml", Model)

<script>
    // Configure DMS with server-side values
     window.dmsConfig = {
        uploadUrl: '@Url.Action("UploadFile", "DMS")',
        deleteUrl: '@Url.Action("DeleteDocument", "DMS")',
        reloadUrl: '@Url.Action("GetFilesById", "DMS")',
        // Add the URL for GetCategories here
        getCategoriesUrl: '@Url.Action("GetCategories", "DMS")',
        caseId:'@(Model.CaseId)',
        projectId: '@(Model.ProjectId)',
        projectName:'@(projectName)',
        folderName: '@(Model.FolderModel?.Name ?? "")',
        folderId: '@(Model.FolderModel?.Id ?? "")'
    };

    function downloadFileWithProgress(url, fileName) {
        LoadingOverlay.show();

        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Download failed: ${response.status}`);
                }
                return response.blob();
            })
            .then(blob => {
                // Create and trigger download
                const downloadUrl = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = downloadUrl;
                a.download = fileName;
                document.body.appendChild(a);
                a.click();

                // Cleanup
                document.body.removeChild(a);
                window.URL.revokeObjectURL(downloadUrl);

                // Hide loading overlay
                LoadingOverlay.hide();
            })
            .catch(error => {
                console.error('Download error:', error);
                LoadingOverlay.hide();
                alert('Download failed');
            });
    }
</script>

<style>
    /* Custom styles for better UX */
    .table th {
        background-color: #f8f9fa;
        border-top: 2px solid #dee2e6;
        font-weight: 600;
    }

    .btn-sm {
        font-size: 0.875rem;
    }

    #dmsDataTable tbody tr:hover {
        background-color: #f8f9fa;
    }

    /* Empty table row styling */
    .no-data-row td {
        background-color: #f8f9fa !important;
        border: 1px solid #dee2e6 !important;
        font-style: italic;
    }
</style>