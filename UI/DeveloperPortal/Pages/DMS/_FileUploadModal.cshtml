@model DeveloperPortal.Domain.DMS.DMSModel

<!-- Add File Modal -->
<div class="modal fade" id="addFileModal" tabindex="-1" aria-labelledby="AddFileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddFileModalLabel">Upload File</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form id="uploadForm" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="alert alert-danger" id="uploadError" style="display: none;">
                        <span id="uploadErrorMessage"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label for="category">Category*</label>
                        <select class="form-control" id="category" name="Category" required>
                            <option value="">-- Select Category --</option>
                            <option value="Category 1">Category 1</option>
                            <option value="Category 2">Category 2</option>
                            <option value="Category 3">Category 3</option>
                            <option value="Category 4">Category 4</option>
                            <option value="Category 5">Category 5</option>
                        </select>
                        <div class="invalid-feedback" id="categoryError">
                            Please select a category.
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        <label for="fileuploader">Upload File(s)*</label>
                        <input type="file" id="fileuploader" name="Files" class="form-control"
                               accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt,.jpg,.jpeg,.png,.gif"
                               multiple required />
                        <div class="form-text">
                            Supported formats: PDF, DOC, DOCX, XLS, XLSX, PPT, PPTX, TXT, JPG, JPEG, PNG, GIF<br />
                            You can select multiple files at once.
                        </div>
                        <div class="invalid-feedback" id="fileError">
                            Please select one or more valid file(s).
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        <label for="description">Description</label>
                        <textarea class="form-control" id="description" name="Description"
                                  rows="3" placeholder="Optional description for the document"></textarea>
                    </div>
                </div>

                <div class="modal-footer">
                    <button id="cancelUpload" type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button id="uploadFile" type="button" class="btn btn-primary">
                        <span id="uploadButtonText">Upload</span>

                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Configuration Script -->
<script>
     
    // Pass modal-specific configuration to JavaScript
    window.dmsModalConfig = {
        modalId: 'addFileModal',
        formId: 'uploadForm',
        fileInputId: 'fileuploader',
        categoryId: 'category',
       // statusId: 'status',
        descriptionId: 'description',
        uploadButtonId: 'uploadFile',
        cancelButtonId: 'cancelUpload',
        maxFileSize: 20971520, // 10MB in bytes
        allowedExtensions: ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx', '.txt', '.jpg', '.jpeg', '.png', '.gif']
    };
    document.addEventListener('DOMContentLoaded', function() {
        // Find the cancel button and the upload form
        const cancelButton = document.getElementById('cancelUpload');
        const uploadForm = document.getElementById('uploadForm');

        if (cancelButton && uploadForm) {
            // Add a click event listener to the cancel button
            cancelButton.addEventListener('click', function() {
                // Reset the form to clear all input fields
                uploadForm.reset();
            });
        }
    });
</script>