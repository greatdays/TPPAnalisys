    <!-- ✅ Then Load DataTables -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<div>
    <div style="position: absolute; z-index: 1; right: 209px; padding-top:2px; ">
        <input autocomplete="off" id="search-unit-grid" placeholder="Search..." tabindex="0" class="k-textbox form-control" style="height: 38px !important;" />
        <label for="search-unit-grid" tabindex="0" style="display:none">Search</label>
    </div>

    <div style="position: absolute;right: 33px;z-index: 1; margin-top:1px">
        <button class="btn btn-primary no-access" id="uploadUnitExcel" role-access="true" style="height: 42px;border-radius: 0px; ">
            Upload <i class="fa fa-upload"></i>
        </button>
    </div>
    <div id="unitKgrid"></div>
    <div id="kednoWindow"></div>
    <table style="width:100%;margin-top:5px;" class="hide-hover">
        <tr>
            <td style="width: 45%; vertical-align: top;">
                <div id="tblTotalUnit">
                    <div class="k-grid totalGrid">
                        <table style="width:100%">
                            <thead>
                                <tr>
                                    <th colspan="3" scope="col" role="columnheader" dclass="k-header">
                                        Total Number of Units
                                    </th>
                                </tr>
                            </thead>
                            <tr>
                                <td colspan="2">SRO</td>
                                <td style="width: 90px; text-align: right"><lable id="lblSROCount"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">Studio</td>
                                <td style="width: 90px; text-align: right"><lable id="lblStudioCount"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">Efficiency</td>
                                <td style="text-align:right"><lable id="lblEfficiencyCount"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">1 Bedroom</td>
                                <td style="text-align:right"><lable id="lblBedroom1Count"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">2 Bedroom</td>
                                <td style="text-align:right"><lable id="lblBedroom2Count"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">3 Bedroom</td>
                                <td style="text-align:right"><lable id="lblBedroom3Count"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">4 Bedroom</td>
                                <td style="text-align:right"><lable id="lblBedroom4Count"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">5+ Bedroom</td>
                                <td style="text-align:right"><lable id="lblBedroom5Count"></lable></td>
                            </tr>

                            <tr>
                                <td colspan="2">Manager Unit </td>
                                <td style="text-align:right"><lable id="lblManagerUnitCount"></lable></td>
                            </tr>
                            <tr>
                                <td colspan="2">Grand Total</td>
                                <td style="text-align:right; font-weight:bold"><lable id="lblTotalCount"></lable></td>
                            </tr>
                        </table>

                    </div>
                </div>
            </td>
            <td style="width:100px ">
            </td>
            <td>
                <div id="tblTotalCSAVCA">
                    <div class="k-grid totalGrid">
                        <table style="width:100%">
                            <thead>
                                <tr>
                                    <th colspan="2" scope="col" role="columnheader" dclass="k-header">
                                        Total # Units for VCA & CSA:
                                    </th>
                                    <th style="border-left: 1px solid #dee2e6; text-align: right; width:100px">
                                        CSA #: <lable id="lblUnitDesignatedCSACount"></lable>
                                    </th>
                                    <th style="border-left: 1px solid #dee2e6; text-align: right; width:100px">
                                        VCA#: <lable id="lblUnitDesignatedVCACount"></lable>
                                    </th>
                                </tr>
                            </thead>
                            <tr>

                                <td style="width:90px;text-align:right"><lable id="lblTotalMobilityUntCount"></lable></td>
                                <td colspan="3"> Total Number of Mobility Units</td>
                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalCommunicationUntCount"></lable></td>
                                <td colspan="3"> Total Number of Communication Units</td>
                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalAdaptableUntCount"></lable></td>
                                <td colspan="3">  Total Number of Adaptable Units</td>
                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalMobilityUnitsPer"></lable>% </td>
                                <td colspan="3">Total % of Mobility Units Provided for this Project</td>
                            </tr>

                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalCommunicationsPer"></lable>% </td>
                                <td colspan="3">Total % of Communications Units Max Counted for CSA and VCA 4%</td>
                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalCommunicationCount"></lable></td>
                                <td colspan="3">Total number for Communications Units Counted for CSA and VCA</td>
                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalMobilityUnitsVCAPer"></lable>% </td>
                                <td colspan="3">% of Mobility Units for Compliance with VCA Max. 11%</td>
                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalMobilityUnitsVCACount"></lable></td>
                                <td colspan="3">Number of Mobility Units for Compliance with VCA</td>
                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalMobilityUnitsCSAPer"></lable>% </td>
                                <td colspan="3"> % of Mobility Units for Compliance with CSA Max. 16% </td>

                            </tr>
                            <tr>
                                <td style="width:90px;text-align:right"><lable id="lblTotalMobilityUnitsCSACount"></lable></td>
                                <td colspan="3">  Number of Mobility Units for Compliance with CSA</td>
                            </tr>
                        </table>

                    </div>
                </div>
            </td>
        </tr>
    </table>
    @* Parking Information *@
    <div class="k-grid " style="margin-top:20px;">
        <div class="k-header k-grid-toolbar">
            <span class="k-grid-header-title"> Building Information</span>
            <a id="addBuildingInformation" class="k-button k-button-icontext k-grid-add" role="button" role-access="true" onclick="addBuildingInfo()" >Add Building</a>
        </div>
    </div>

    <div class=" k-box-body">
        <br />
        <table id="dtPrkingData"></table>
    </div>
</div>
<div class="modal fade" id="modal-building-add" role="dialog" data-keyboard="false" data-backdrop="static"></div>
<script type="text/x-kendo-template" id="windowTemplate">
    <p>ACHPNo  <strong>#= achpNo #</strong> ? </p>
     <div class=" multi-button" style="float:right">
        <button class=" btn btn btn-primary k-button k-button-md k-rounded-md k-button-solid k-button-solid-base" id="yesButton"><span class="k-button-text">Yes</span></button>
    <button class="btn btn btn-secondary  k-button k-button-md k-rounded-md k-button-solid k-button-solid-base" id="noButton"><span class="k-button-text">No</span></button>
            </div>
</script>

<script type="text/javascript">
    
    var gridBuildingDropdowData = [];
    var allUnitsData = [];
    var BuildingInformationData = [];
    var UnitGridData = [];
    var dtBuildingDataTable;
    var kgridEditModelData={};
    

    var windowTemplate = kendo.template($("#windowTemplate").html());
    var kednoWindow = $("#kednoWindow").kendoWindow({
        title: "Are you sure you want to delete this unit?",
        visible: false, //the window will not appear before its .open method is called
        width: "400px",

    }).data("kendoWindow");
    /*Start Unit Kendo Grid */
    function LoadProjectInformation() {

             $("#uploadUnitExcel").click(function () {
       $("#modalImportUnits").modal('show');
     });
        dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetUnitDetails", "ProjectDetail", new { area = "Construction" })',
                    dataType: "json"
                    , method: "post"
                    ,contentType: "application/json" 
                },
                update: {
                    url: '@Url.Action("UpdateUnitDetails", "ProjectDetail", new { area = "Construction" })',
                    method: "post",
                    dataType: "json"
                    ,contentType: "application/json"
                },
                destroy: {
                    url: '@Url.Action("DeleteUnitDetail", "ProjectDetail", new { area = "Construction" })',
                    method: "post",
                    dataType: "json"
                     ,contentType: "application/json"
                },
                create: {
                    url: '@Url.Action("AddUnitDetail", "ProjectDetail", new { area = "Construction" })',
                    method: "post",
                    dataType: "json"
                    ,contentType: "application/json"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        $('#cm_loader').attr("hidden", false);
                        $('.blockUI').attr("hidden", true);
                        //Update Ids based on vales
                        if (options.models.length > 0) {
                            options.models[0].unitType = "";
                        }
                        UnitGridData = [];
                        return JSON.stringify(options.models);
                    }
                    options.caseId = Id;
                    options.projectId = ProjectId;
                    if (operation == "read" && reloadUntiGrid) {
                        reloadUntiGrid = false;
                        options.page = 1;
                        options.pageSize = 20;
                        options.skip = 0;
                        options.take = 20;
                    }
                    else { options.unitGridData = UnitGridData; }
                    return  JSON.stringify(options);
                }
            },
            pageSize: 20,
            batch: true,
            serverPaging: true,
            serverSorting: true,
            schema: {
                total: function (response) {
                    return response._total;
                },
                model: {
                    id: "unitID",
                    fields: {
                        unitID: { editable: false, nullable: true },
                        achpNo: { validation: { required: true } },
                        unitNum: { type: "string" },
                        managersUnit: { type: "boolean" },
                        totalBedroom: { type: "string", validation: { required: true } },
                        floorPlanType: { type: "string", },
                        unitType: { type: "string", defaultValue: { Value: 0, Text: "Select" } },
                        additionalAccecibility: { type: "string" },
                        isCompliant: { type: "boolean" },
                        isCSA: { type: "boolean" },
                        isVCA: { type: "boolean" }
                    }
                },
                noRecords: true,
                data: function (response) {
                    if (response.totalUnitsCount) {
                        SetUnitTotalGridData(response.totalUnitsCount);
                        gridBuildingDropdowData = response.buildingDropDownList;
                    }

                    UnitGridData = response.unitGridData;
                    if (response.success == true) {
                        showMessage("Success", response.message);
                    }
                    if (response.success == false) {
                        showMessage("Error", "Error occurred, please try again.");
                    }
                    if (response.isRefreshGrid) {

                        var grid = $('#unitKgrid').data('kendoGrid');
                        grid.dataSource.read();

                    }
                    $('#cm_loader').attr("hidden", true);
                    return response ? response.data : response;
                }
            }
        });
        var gridCommand = [];
        var gridToolbar = [];
        if (isEditAccess) {
            gridToolbar = [{ name: "create", text: "Add" }];
            gridCommand = [
                { name: "edit", text: { edit: " ", update: " ", cancel: " " } },
                {
                    name: "Delete", text: "<span class='k-icon k-i-close'></span>",
                    click: function (e) {

                        //add a click event listener on the delete button
                        e.preventDefault(); //prevent page scroll reset
                        var tr = $(e.target).closest("tr"); //get the row for deletion
                        var data = this.dataItem(tr); //get the row data so it can be referred later

                        kednoWindow.content(windowTemplate(data)); //send the row data object to the template and render it
                        kednoWindow.center().open();

                        $("#yesButton").click(function () {
                            dataSource.remove(data)  //prepare a "destroy" request
                            dataSource.sync()  //actually send the request (might be ommited if the autoSync option is enabled in the dataSource)
                            kednoWindow.close();
                        })
                        $("#noButton").click(function () {
                            kednoWindow.close();
                        })

                    }
                }
            ]
        }

        $("#unitKgrid").kendoGrid({
            dataSource: dataSource,
            height: 600,
            sortable: true,
            scrollable: {
                endless: true
            },
            pageable: {
                numeric: false,
                previousNext: false
            },

            editable: {
                mode: "inline",
                confirmation: true,
                confirmDelete: "No"
            },
            edit: onGridEdit,
            toolbar: gridToolbar,
            columns: [
                { field: "achpNo", title: "ACHP #", width: "150px", editor: BuildingDropDownEditor, template: "#=achpNo#" },
                { field: "unitNum", title: "Unit #", width: "80px" },
                { field: "managersUnit", title: "Managers Unit", width: "80px", template: ManagersUnitTemplate },
                { field: "totalBedroom", title: "Unit Type", width: "110px", editor: TotalBedroomDropDownEditor, template: TotalBedroomTemplate },
                { field: "floorPlanType", title: "Floor Plan Type", width: "150px" },
                { field: "unitType", title: "Unit Designation Mobility, Communication, FHA / 11A / 11B)", editor: UnitTypeDropDownEditor, template: UnitTypeTemplate, width: "150px" },
                { field: "additionalAccecibility", title: "Additional Accessibility Requirement: Universal Design, EAP, Unruh", width: "150px" },
                { field: "isCompliant", title: "Compliant Yes or No", template: IsCompliantTemplate, width: "80px" },
                { field: "isCSA", title: "Unit Designated for Compliance With CSA", template: IsComplianceWithCSATemplate, width: "120px" },
                { field: "isVCA", title: "Unit Designated for Compliance With VCA", template: IsComplianceWithVCATemplate, width: "120px" },
                {
                    command: gridCommand, title: "&nbsp;", width: "80px"
                }]
        });
          LoadParkingInfo();
          GetUnitModalData();
      
    }
    function onGridEdit(arg) {
        var buildingId = arg.model.BuildingId;
        var ftDatasource = []
        if (buildingId) {
            var buildingddl = $("[name^='achpNo']").data("kendoDropDownList");
            buildingddl.readonly();
        }
    }

    function BuildingDropDownEditor(container, options) {
        $('<input required name="' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({

                autoBind: false,
                dataTextField: "buildingFileNumber",
                dataValueField: "buildingFileNumber",
                dataSource: BuildingInformationData,
                change: function (e) {
                    var dataItem = e.sender.dataItem();
                    options.model.set("BuildingId", dataItem.buildingId);
                    options.model.set("CaseId", dataItem.caseId);
                    BuildingDropDownChange(e);
                }
            });
    }

    function BuildingDropDownChange(e) {
    }

    function TotalBedroomDropDownEditor(container, options) {
        $('<input required name="' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                autoBind: false,
                dataTextField: "text",
                dataValueField: "text",
                dataSource: kgridEditModelData.lutTotalBedrooms,
                change: function (e) {
                    var dataItem = e.sender.dataItem();
                    options.model.set("LutTotalBedroomID", dataItem.Value);
                }
            });

    }
    function UnitTypeDropDownEditor(container, options) {
        $('<input  name="' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                autoBind: false,
                dataTextField: "text",
                dataValueField: "text",
                dataSource: kgridEditModelData.lutUnitType,
                change: function (e) {
                    var dataItem = e.sender.dataItem();
                    options.model.set("LutUnitTypeID", dataItem.Value);
                }

            });
    }

    function TotalBedroomTemplate(data) {
        switch (data.totalBedroom) {
            case "1":
                data.totalBedroom = "1 Bedroom";
                break;
            case "2":
                data.totalBedroom = "2 Bedroom";
                break;
            case "3":
                data.totalBedroom = "3 Bedroom";
                break;
            case "4":
                data.totalBedroom = "4 Bedroom";
                break;
            case "5+":
                data.totalBedroom = "5 Bedroom";
                break;
            default:

                break;
        }
        return data.totalBedroom == null ? "" : data.totalBedroom;
    }
    function UnitTypeTemplate(data) {
        return data.unitType == null ? "" : data.unitType;
    }
    function ManagersUnitTemplate(data) {
        return data.managersUnit ? "<span class='k-icon k-i-x'></span>" : "";
    }
    function IsCompliantTemplate(data) {
        return data.isCompliant ? "Yes" : "No";
    }
    function IsComplianceWithCSATemplate(data) {

        return data.isCSA ? "<span class='k-icon k-i-x'></span>" : "";
    }
    function IsComplianceWithVCATemplate(data) {
        return data.isVCA ? "<span class='k-icon k-i-x'></span>" : "";
    }
    function SetUnitTotalGridData(data) {
        if ($(".k-unit-grid-title").length == 0) {
            $("#unitKgrid .k-grid-add").html("Add <i class='fa fa-plus'></i>");
            $(".k-grid-toolbar", "#unitKgrid").prepend("<span class='k-grid-header-title k-unit-grid-title'>Unit Information </span>");
            //$(".k-grid-toolbar", "#unitKgrid").prepend("<span class='k-grid-header-title k-unit-grid-title'>Unit: Distribution & Designation By Unit Type, Floor Plan Type, Accessible Unit Type </span>");
        }

        $("#lblSROCount").text(data.sroCount);
        $("#lblStudioCount").text(data.StudioCount);
        $("#lblEfficiencyCount").text(data.efficiencyCount);
        $("#lblBedroom1Count").text(data.bedroom1Count);
        $("#lblBedroom2Count").text(data.bedroom2Count);
        $("#lblBedroom3Count").text(data.bedroom3Count);
        $("#lblBedroom4Count").text(data.bedroom4Count);
        $("#lblBedroom5Count").text(data.bedroom5Count);
        $("#lblManagerUnitCount").text(data.managerUnitCount);
        $("#lblTotalCount").text(data.totalCount);

        $("#lblUnitDesignatedCSACount").text(data.unitDesignatedCSACount);
        $("#lblUnitDesignatedVCACount").text(data.unitDesignatedVCACount);
        $("#lblTotalMobilityUntCount").text(data.totalMobilityUntCount);
        $("#lblTotalCommunicationUntCount").text(data.totalCommunicationUntCount);
        $("#lblTotalAdaptableUntCount").text(data.totalAdaptableUntCount);
        $("#lblTotalMobilityUnitsPer").text(data.totalMobilityUnitsPer);
        $("#lblTotalCommunicationsPer").text(data.totalCommunicationsPer);
        $("#lblTotalCommunicationCount").text(data.totalCommunicationCount);
        $("#lblTotalMobilityUnitsVCAPer").text(data.totalMobilityUnitsVCAPer);
        $("#lblTotalMobilityUnitsVCACount").text(data.TotalMobilityUnitsVCACount);
        $("#lblTotalMobilityUnitsCSAPer").text(data.TotalMobilityUnitsCSAPer);
        $("#lblTotalMobilityUnitsCSACount").text(data.TotalMobilityUnitsCSACount);

    }

     $('#search-unit-grid').keyup(function (e) {
        var value = this.value.toLowerCase().trim();

        $('#unitKgrid').find('table tr').each(function (index) {
            if (!index) return;
            $(this).find("td").each(function () {
                var id = $(this).text().toLowerCase().trim();
                var not_found = (id.indexOf(value) == -1);
                $(this).closest('tr').toggle(!not_found);
                return not_found;
            });
        });
        SetRoleAccess(accessType);
    });
   
    /*End Unit Kendo Grid */

    
</script>