@page
@model DeveloperPortal.Pages.ProjectDetails.IndexModel
@{
	ViewData["Title"] = "Project Details";
}
<style>

/* Page max width shell */
.project-details-shell{
  max-width: 1200px;      /* comfortable reading width */
  margin: 0 auto;         /* center it */
  padding: 0 16px;        /* breathing room on small screens */
}


/* Tab: Site Information pagination fixes (plugin uses <li><a>) */
#tabSiteInformation .pagination { display: list-item !important; text-align: start; }
#tabSiteInformation .paginate_button a { margin-left: -5px !important; }
#tabSiteInformation .paginate_button:first-child a { margin-left: -5px; }

/* Generic DataTables pager alignment */
a.paginate_button { float: left !important; }
.paginate_button:first-child a {
  margin-left: 0;
  border-top-left-radius: .25rem;
  border-bottom-left-radius: .25rem;
}
.paginate_button:last-child a {
  border-top-right-radius: .25rem;
  border-bottom-right-radius: .25rem;
}
.paginate_button.active a { color: #fff !important; background: #2C3E5C; }

/* === Consolidated DataTables pagers (3 IDs share the same look) === */
#dtPrkingData_paginate a.paginate_button,
#dtSiteData_paginate a.paginate_button,
#dtPermitNumberData_paginate a.paginate_button {
  position: relative;
  padding: .5rem .75rem !important;
  margin: 1px !important;
  line-height: 1.25;
  color: #fff !important;
  background-color: #2C3E5C !important;
  border: 1px solid #2C3E5C !important;
}

#dtPrkingData_paginate .paginate_button:hover,
#dtSiteData_paginate .paginate_button:hover,
#dtPermitNumberData_paginate .paginate_button:hover,
#dtPrkingData_paginate .paginate_button.current,
#dtSiteData_paginate .paginate_button.current,
#dtPermitNumberData_paginate .paginate_button.current {
  color: #fff !important;
  border: 1px solid #111 !important;
  background: #111 !important;
}

/* === Project Checklist (same card feel as summary) === */
.tpp-checklist {
  background: #fff;
  border: 1px solid #e5e7eb;
  border-radius: 14px;
  box-shadow: 0 10px 25px rgba(0,0,0,.06);
  overflow: hidden; /* keeps header/body corners rounded */
}
.tpp-checklist__header {
  background: #fafafa; /* match summary spacing, lighter header */
  padding: 10px 14px;
  display: flex;
  align-items: center;
  gap: 12px;
}
.tpp-checklist__header h3 { margin: 0; }
.tpp-checklist__header .progressbar {
  flex: 1 1 auto;
  height: 8px;
  background: #eef2f7;
  border-radius: 999px;
  overflow: hidden;
}
.tpp-checklist__header .progressbar > span {
  display: block; height: 100%; width: 0;
  background: linear-gradient(90deg, #2563eb, #7c3aed);
  transition: width .35s ease;
}
.tpp-checklist__body { padding: 16px; }


.tpp-steps {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));
  gap: 12px;
  margin: 0; padding: 0; list-style: none;
}
.tpp-step {
  display: flex; align-items: center; gap: 12px;
  padding: 10px 12px;
  border: 1px solid #e5e7eb;
  border-radius: 10px;
  background: #fff;
  cursor: pointer;
}
.tpp-step.locked { opacity: .6; cursor: not-allowed; }
.tpp-step-idx {
  width: 26px; height: 26px; flex: 0 0 26px;
  display: inline-flex; align-items: center; justify-content: center;
  border-radius: 999px; font-weight: 700; font-size: 12px;
  background: #eef2ff; color: #2563eb;
}
.tpp-step.complete .tpp-step-idx { background: #ecfdf5; color: #16a34a; }
.tpp-step-label { font-weight: 600; flex: 1 1 auto; }
.tpp-step-badge {
  margin-left: auto;
  font-size: 12px;
  padding: 4px 8px;
  border-radius: 999px;
  border: 1px solid #e5e7eb;
  color: #6b7280;
}
.tpp-step.complete .tpp-step-badge { color: #16a34a; border-color: #bbf7d0; background: #f0fdf4; }

/* Visually unstyled button that still behaves like a button */
.tablink-plain{
  background: none;
  border: 0;
  padding: 0;
  margin: 0;
  color: inherit;        /* same color as surrounding text */
  font: inherit;         /* inherit font/size/weight */
  cursor: pointer;
  text-decoration: none; /* remove underline; add on hover if you like */
}
.tablink-plain:hover{ text-decoration: underline; }
.tablink-plain:focus{
  outline: 2px solid #94a3b8;   /* visible focus ring */
  outline-offset: 2px;
}

/* selected checklist pill */
.tpp-step.current{
  border: 2px solid #2563eb;   /* thicker border */
  background: #eff6ff;         /* subtle highlight */
}


</style>

@* Page Script *@

<script src="~/PageScripts/ProjectDetail/ProjectInformation.js"></script>
<script src="~/PageScripts/ProjectDetail/UnitMatrixInformation.js"></script>
<script src="~/PageScripts/ProjectDetail/ParkingInformation.js"></script>
<script src="~/PageScripts/ProjectDetail/LadbsInfomation.js"></script>
<script src="~/PageScripts/BuildingIntake/BuildingInformation.js"></script>
<script src="~/PageScripts/ProjectDetail/SiteInformation.js"></script>
<script src="~/pagescripts/ProjectDetail/DMS.js"></script>
<script src="~/pagescripts/ProjectDetail/FundingSource.js"></script>
<script src="~/PageScripts/DevelopmentTeam/DevelopmentTeam.js"></script>
<script src="~/PageScripts/FloorPlanType/FloorPlanType.js"></script>
<div class="page-content project-details-shell" id="divprojectDetail">

    <div class="container-fluid">
    <!-- Project Notification -->
    @* Project Notification *@
    @if (Model.ProjectSummary?.ReviewNote != null && Model.ProjectSummary.ReviewNote.Any())
    {
        <div class="project-notifications mt-4">
            <div class="bg-warning1 p-3 text-center position-relative">
                <span class="close-btn"></span>
                <p>
                    <b>You have new comments on @Model.ProjectSummary.ProjectName:</b>
                    <br />
                    @foreach (var note in Model.ProjectSummary.ReviewNote)
                    {
                        @note <br />
                    }
                </p>
            </div>
        </div>
    }

    <!-- End Project Notification -->
    </div>
	<div  class="px-2 px-xl-4">
        @{
            Html.RenderPartial("_ProjectSummary", Model.ProjectSummary);
        }
    </div>


	<!-- Project Checklist (same card style as summary) -->


	<div  class="px-2 px-xl-4">
		<section class="card border-0 " id="panel-checklist" aria-label="Project Checklist">
		  <div class="card-header d-flex align-items-center bg-light p-3">
			<h4 class="mb-0">Project Checklist</h4>
		  </div>

		  <div class="card-body p-4">
			<ol class="tpp-steps" id="steps">
				<li class="tpp-step step" id="checklist-step-documents" data-step="Documents" onclick="ProjectInformation.openTab(event, 'tabDocuments')">
					<span class="tpp-step-idx idx">1</span>
				<button class="tablink-plain"  >Project Documents</button>
				</li>
				<li class="tpp-step step" data-step="team" onclick="ProjectInformation.openTab(event, 'tabDevelopmentTeamList')">
				<span class="tpp-step-idx idx">2</span>
					<button class="tablink-plain" >Project Team Information</button>
				</li>
				<li class="tpp-step step" data-step="site" onclick="ProjectInformation.openTab(event, 'tabSiteInformation')">
				<span class="tpp-step-idx idx">3</span>
					<button   class="tablink-plain"   id="btnSiteInformation">Site Information </button>
				</li>
				<li class="tpp-step step" data-step="floor" onclick="ProjectInformation.openTab(event, 'partialContainer')">
				<span class="tpp-step-idx idx">4</span>
					<button  class="tablink-plain"  >Floor Plan Type</button>
				</li>
				<li class="tpp-step step" data-step="Building & Units" onclick="ProjectInformation.openTab(event, 'tabProjectInformation')">
				<span class="tpp-step-idx idx">5</span>
				  <button  class="tablink-plain"    id="btnProjectInformation">Building & Unit Information </button>
				</li>
				<li class="tpp-step step" data-step="Funding" onclick="ProjectInformation.openTab(event, 'tabFundingSource')">
				<span class="tpp-step-idx idx">6</span>
				<button  class="tablink-plain" >Funding Source</button>
	
			  </li>
			 @*  <button class="tablinks hide" onclick="ProjectInformation.openTab(event, 'tabLogs')">Plan Review</button> *@
		@* 	   <li class="tpp-step step locked" data-step="building">
				<span class="tpp-step-idx idx">4</span>
				<span class="tpp-step-label">Building Information</span>
				<span class="tpp-step-badge badge">Locked</span>
			  </li> *@
			</ol>
		  </div>
		</section>
	</div>
	<div  class="px-2 px-xl-4">
		<div class="card" >
			<div class="card-body p-3">
				<div class="px-2 px-xl-4">
					<!-- Tab content -->
					<div id="tabProjectInformation" class="tabcontent">
						@{
							Html.RenderPartial("_ProjectInformation");
						}
					</div>
					<div id="partialContainer" class="tabcontent">
						@{
							Html.RenderPartial(@"~/Pages/FloorPlanType/_FloorPlanType.cshtml", Model.FloorPlanTypes);
						}
					</div>
					<div id="tabSiteInformation" class="tabcontent ">
						@* <div class="k-header k-grid-toolbar">
							<span class="k-grid-header-title">Site Information</span>
							<a id="addSite" class="k-button k-button-icontext k-grid-add btn btn-primary btn-sm" role="button" role-access="true" onclick="SiteInformation.DisplayModal()">Add Site</a>
						</div> *@
						<!-- Header -->
						<div class="d-flex justify-content-between align-items-center pb-2 mb-2 border-bottom">
						  <h4 class="mb-0">Site Information</h4>
						  <button id="uploadFundingSourceBtn"
								  type="button"
								  class="btn btn-primary"
								  role="button" role-access="true"
								  onclick="SiteInformation.DisplayModal()">
							Add Site
						  </button>
						</div>

						<!-- Pager toolbar band (we’ll move the DataTables pager into here) -->
						<div id="site-toolbar" class="d-flex align-items-center gap-2 small text-muted mb-2"></div>


						<table id="dtSiteData"></table>
				
					</div>
					<div id="tabImportantDates" class="tabcontent">
						<div id="divImportantDates"></div>
					</div>
					<div id="tabDevelopmentTeamList" class="tabcontent">
						<div id="divDevelopmentTeamList">
						</div>
					</div>
					<div id="tabPolicyContacts" class="tabcontent">
						<div id="divPolicyContacts"></div>
					</div>
					<div id="tabDocuments" class="tabcontent"  style="display: block">
						<div id="divDocument"></div>
					</div>
					<div id="tabFundingSource" class="tabcontent">
						<div id="divFundingSource"></div>
					</div>
					<div id="tabLogs" class="tabcontent">
						<div id="divLogs"></div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>



@{
	Html.RenderPartial("UploadUnitInfo", Model.ProjectSummary);
}

<div id="Help">
	@{
		Html.RenderPartial("_Help", Model.ProjectSummary);
	}
</div>

<script type="text/javascript">
	var baseUrl = window.location.origin;
	var Id = @Model.Id;
	var ProjectId = @Model.ProjectId;
	var isEditAccess = true;
	var reloadUntiGrid = false;
	var documentControlViewModelId = 7313;
	var logsControlViewModelId = 1006;
	var ContactControlViewModelId = 1028;
	// var PolicyContactControlViewModelId = 12505;
	var popupCaseId = 0;
	var popuprefProjectSiteID = 0;
	var popupTitle = "";
	var oldPageSize = 0;
	var selectedEvents = [];
	var reloadParkingGrid = false;
	var accessType="FULLACCESS";
	var SiteInformationData = [];
	var IsLoadSiteInformationTab = false;
	$.fn.dataTableExt.pager.numbers_length = 50;

	//Load on init
	UnitMatrixInformation.LoadUnitMatrix();
	BuildingInformation.load();
	SiteInformation.LoadSiteInformation()


</script>


<script>
  (function () {
	function showDocsDefault() {
	  // Try the most reliable and specific elements first.
	  var btnDocs =
		// Try the top tab bar button first (most direct access)
		document.getElementById('btnDocuments') ||
		// Fallback to the Checklist Item's unique ID
		document.getElementById('checklist-step-documents');

	  // If a trigger is found, click it to run the standard tab-switching logic
	  if (btnDocs && typeof btnDocs.click === 'function') {
		btnDocs.click();
		return;
	  }

	  // --- Hard Fallback (Section 3 in your original code) ---
	  // Only run if NO button was found above.
	  var panes = document.querySelectorAll('.tabcontent');
	  panes.forEach(el => el.style.display = 'none');
	  var docsPane = document.getElementById('tabDocuments');
	  if (docsPane) docsPane.style.display = 'block';

	  // best-effort: mark whichever button exists as active
	  // NOTE: You should update this selector if you replace .tablinks with Bootstrap's .nav-link
	  var active = document.querySelector('.tab .tablinks.active'); 
	  if (active) active.classList.remove('active');
	  var topBtn = document.getElementById('btnDocuments');
	  if (topBtn) topBtn.classList.add('active');
	}

    // Run AFTER everything else wires up (other scripts may set a default)
    window.addEventListener('load', function () {
      setTimeout(showDocsDefault, 0);
    });
  })();

  // highlight the clicked step
document.getElementById('steps')?.addEventListener('click', e => {
  const li = e.target.closest('.tpp-step');
  if (!li || li.classList.contains('locked')) return;
  document.querySelector('.tpp-step.current')?.classList.remove('current');
  li.classList.add('current');
});

// set "Documents" as selected on load (change the selector if your default differs)
window.addEventListener('load', () => {
  document.querySelector('.tpp-step [onclick*="tabDocuments"]')
    ?.closest('.tpp-step')
    ?.classList.add('current');
});
</script>


<style>
/* Pager: left aligned, vertically centered, compact */
#dtSiteData_wrapper .dataTables_paginate {
  float: none !important;
  display: flex !important;
  justify-content: flex-start !important;
  align-items: center !important;
  gap: .5rem;
  text-align: left !important;
  margin: 0;
}

/* The 'Select Site:' label we prepend */
#dtSiteData_paginate .select-site-title {
  display: inline-flex;
  align-items: center;
  font-weight: 500;
  color: #6c757d;
}

/* Make pills look like Bootstrap buttons and center text */
#dtSiteData_paginate .paginate_button {
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center;
  line-height: 1;
  padding: .25rem .6rem;
  border-radius: 50rem; /* rounded-pill */
}

/* Current = primary, others = outline secondary */
#dtSiteData_paginate .paginate_button.current {
  background-color: var(--bs-primary) !important;
  border-color: var(--bs-primary) !important;
  color: #fff !important;
}
#dtSiteData_paginate .paginate_button:not(.current) {
  background: transparent !important;
  border: 1px solid var(--bs-secondary-border-subtle, #ced4da) !important;
  color: var(--bs-secondary-color, #6c757d) !important;
}

/* Make injected partial consume full width; remove cell padding */
#dtSiteData,
#dtSiteData_wrapper,
#dtSiteData tbody,
#dtSiteData tbody tr,
#dtSiteData tbody td {
  width: 100% !important;
  max-width: 100% !important;
  box-sizing: border-box;
}
#dtSiteData tbody td { padding: 0 !important; }

/* Optional: tidy partial’s typography if you add these classes */
.site-summary { padding: .5rem 0 1rem; }
.site-summary .site-title { font-size: 1.5rem; margin: .25rem 0 .75rem; }
.site-summary .site-address { color: #495057; margin-bottom: .75rem; }
.site-summary .hr-thin { border-top: 1px solid #dee2e6; margin: .75rem 0; }
.site-stat { border: 1px solid #e9ecef; border-radius: .5rem; padding: .5rem .75rem; background: #fff; }
.site-stat .label { color: #6c757d; font-size: .85rem; }
.site-stat .value { font-weight: 600; font-size: 1.1rem; }
</style>