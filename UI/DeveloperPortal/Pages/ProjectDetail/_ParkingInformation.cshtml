@using DeveloperPortal.Domain.ProjectDetail

@model BuildingParkingInformationModal
<style>


    #dtPrkingData .input-parking {
        border: 0px solid #828282 !important;
        text-align: left;
        pointer-events: none;
    }

    #dtPrkingData .radio-parking {
        pointer-events: none;
    }

    .input-parking-total {
        border: 0px !important;
        text-align: left;
        pointer-events: none;
    }

    .input-parking-edit {
        border: 1px solid #828282 !important;
        pointer-events: auto !important;
        text-align: left;
        pointer-events: none;
    }

    .total-td {
        background-color: #e9ecef;
        font-weight: bold;
        font-size: 15px;
    }

    #tblparkinginfo .tr-header {
        font-size: 18px;
        background: whitesmoke;
        height: 50px;
    }

        #tblparkinginfo .tr-header:hover {
            background: whitesmoke !important;
        }

    #dtPermitNumberData_wrapper .paging_numbers {
        DISPLAY: FLEX;
        MARGIN-LEFT: 3em;
    }

    #dtPermitNumberData_wrapper .select-site-title {
        font-size: 16PX;
        FONT-WEIGHT: BOLD;
        padding-top: 10PX;
        min-width: 135px;
        padding-right: 16px;
    }

    #dtPermitNumberData_wrapper .pagination .page-link {
        display: table-cell !important;
    }

    #dtPermitNumberData_wrapper .pagination li {
        margin-bottom: 5px;
    }

    .permit-number-buttons {
        padding: 1em;
    }

    #dtPrkingData .input-parking {
        border: 0px;
        text-align: left;
        pointer-events: none;
    }

    #dtPrkingData .radio-parking {
        pointer-events: none;
    }


    .input-parking-total {
        border: 0px !important;
        text-align: left;
        pointer-events: none;
    }

    .input-parking-edit {
        border: inherit !important;
        pointer-events: auto !important;
    }

    #dtPrkingData .input-building-summary {
        border: 0px;
        pointer-events: none;
        max-height: 35px;
    }

    #dtPrkingData .input-building-summary-disabled {
        border: 0px;
        pointer-events: none;
    }

    .input-building-summary-edit {
        border: 1px solid #e4e4e4 !important;
        pointer-events: auto !important;
    }

    .view-control-height {
        max-height: 25px !important;
    }

    .total-td {
        background-color: #e9ecef;
        font-weight: bold;
        font-size: 15px;
    }

    #tblparkinginfo .tr-header {
        font-size: 18px;
        background: whitesmoke;
        height: 50px;
    }

        #tblparkinginfo .tr-header:hover {
            background: whitesmoke !important;
        }

    #dtPermitNumberData_wrapper .paging_numbers {
        DISPLAY: FLEX;
        MARGIN-LEFT: 3em;
    }

    #dtPermitNumberData_wrapper .select-site-title {
        font-size: 16PX;
        FONT-WEIGHT: BOLD;
        padding-top: 10PX;
        min-width: 135px;
        padding-right: 16px;
    }

    #dtPermitNumberData_wrapper .pagination .page-link {
        display: table-cell !important;
    }

    #dtPermitNumberData_wrapper .pagination li {
        margin-bottom: 5px;
    }

    .permit-number-buttons {
        padding: 1em;
    }

    #blockUIMessage {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1050;
        background: rgba(255, 255, 255, 0.8);
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: bold;
        box-shadow: 0 0 10px rgba(0,0,0,0.2);
    }

    #loaderOverlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        backdrop-filter: blur(4px);
        background: rgba(255, 255, 255, 0.4);
        z-index: 2000;
        justify-content: center;
        align-items: center;
    }

    #buildingSummaryForm .form-control {
        border: 1px solid #fff;
    }

    #buildingSummaryForm .form-control {
        border: 1px solid #fff;
    }

    .input-tight {
        padding-left: 0 !important;
        padding-right: 0.25rem !important; /* optional */
    }

    .show-border {
        border: 1px solid #ced4da !important;
        background-color: #fff !important;
        pointer-events: auto !important;
    }
</style>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>


<div class="" style="margin-top:15px;">
    <div class="row">
        <div class="col-sm-12">
            <form id="buildingSummaryForm">
                @Html.HiddenFor(m => m.BuildingAddressId)
                @Html.HiddenFor(m => m.LutApplicableAccessibilityStandardId)
                @Html.HiddenFor(m => m.BuildingId)
                @Html.HiddenFor(m => m.ProjectSiteId)
                @Html.HiddenFor(m => m.PropSnapshotID)
                @Html.HiddenFor(m => m.CaseId)

                <div class="row align-items-center gy-2">
                    <!-- Title -->
                    <div class="col-12 col-lg">
                        @if (!string.IsNullOrWhiteSpace(Model.StructureNo))
                        {
                            <h5 class="site-title mb-0">
                                @Model.BuildingFileNumber - @Model.StructureNo
                            </h5>
                        }
                        else
                        {
                            <h5 class="site-title mb-0">
                                @Model.BuildingFileNumber
                            </h5>
                        }
                    </div>

                    <!-- Actions -->
                    <div class="col-12 col-lg-auto">
                        <div class="d-flex flex-wrap justify-content-lg-end">
                            <a id="editBuildingSummary"
                               class="k-button k-button-icontext k-grid-add no-access btn btn-primary btn-sm me-2 mb-2"
                               style="background:#113F67; color:white;"
                               role-access="true"
                               onclick="BuildingInformation.editBuildingSummary(@Model.ProjectSiteId)">
                                Edit Selected Building
                            </a>

                            <a id="cancelEditBuildingSummary"
                               class="k-button k-button-icontext k-grid-add btn btn-primary btn-sm me-2 mb-2"
                               style="background:#113F67; color:white;"
                               onclick="BuildingInformation.cancelBuildingSummary()">
                                Cancel
                            </a>

                            <button id="updateBuildingSummary"
                                    type="submit"
                                    class="k-button k-button-icontext k-grid-add btn btn-primary btn-sm mb-2"
                                    style="background:#113F67; color:white;">
                                Update
                            </button>
                        </div>
                    </div>
                </div>
       
                <div class="container-fluid">
                    <!-- Information layout -->
                    <div class="row gy-3 gx-5 border-bottom">

                        <div class="col-12 col-sm-2 col-lg-2">
                            <div class=" text-secondary mb-1">Building Permit Number: </div>
                            <div class="fw-semibold">
                                @Html.TextBoxFor(x => x.BuildingPermitNumber, new {
                                @class = "input-number form-control NumberOfUnits input-building-summary w-auto  input-tight ", @MaxLength = "7", style = "width: 75px;" })
                            </div>
                        </div>

                        <div class="col-12 col-sm-1 col-lg-2">
                            <div class=" text-secondary mb-1">Building Address</div>
                            <div class="fw-semibold">
                                <div class="radio-building-summary-lable text-wrap">
                                    @Model.FullAddress
                                </div>
                                <div class="radio-building-summary-edit">
                                    @Html.DropDownListFor(x => x.BuildingAddressId, new List<SelectListItem>(), "Building Address", new { @class = "form-control input-building-summary ", @id = "BuildingAddressDL" })
                                </div>
                            </div>
                        </div>

                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">Building Description</div>
                            <div class="fw-semibold">
                                <spam class="radio-building-summary-lable" id="lblBuildingDescription">
                                    @Model.BuildingDescription
                                </spam>
                                <div class="radio-building-summary-edit">
                                    @Html.DropDownListFor(model => model.BuildingDescription, new List<SelectListItem>(), "Select", new { @id = "BuildingDescriptionDL", @class = "form-control input-building-summary " })
                                </div>

                            </div>
                        </div>

                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">Non-Residential</div>
                            <div class="fw-semibold">
                                <spam class="radio-building-summary-lable">
                                    @(Model.NonResidental.HasValue && Model.NonResidental == true ? "Yes" : "No")
                                </spam>
                                <div class="input-group yesno_radio radio-building-summary-edit">
                                    <div class="custom-control custom-radio" aria-labelledby="s_NonResidental1" style="margin-right:10px;">
                                        @Html.RadioButtonFor(model => model.NonResidental, "true", new { @id = "s_NonResidental1", @class = "radio-building-summary custom-control-input" })
                                        <label class="custom-control-label" for="s_NonResidental1">Yes</label>
                                    </div>
                                    <div class="custom-control custom-radio " aria-labelledby="s_NonResidental2">
                                        @Html.RadioButtonFor(model => model.NonResidental, "false", new { @id = "s_NonResidental2", @class = "radio-building-summary custom-control-input " })
                                        <label class="custom-control-label" for="s_NonResidental2">No</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">Applicable Codes</div>
                            <div class="fw-semibold">
                                <spam class="radio-building-summary-lable">
                                    @Model.ApplicableCodes
                                </spam>
                                <div class="radio-building-summary-edit" style="width:400px;" id="divApplicableCodesDL">
                                    @Html.DropDownListFor(model => model.LutApplicableAccessibilityStandardIdList, Model.LutApplicableAccessibilityList, "Select", new { @id = "ApplicableCodesDL", @multiple = "multiple", @class = "form-control input-building-summary " })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row gy-3 gx-5 mt-1 border-bottom">
                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">
                                Total Number of Units
                            </div>
                            <div class="fw-semibold">
                                @Html.TextBoxFor(x => x.NumberOfUnits, new { @class = "input-number form-control NumberOfUnits input-building-summary w-auto input-tight", @MaxLength = "5" })
                            </div>
                        </div>

                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">
                                Number of Mobility Units
                            </div>
                            <div class="fw-semibold">
                                @Html.TextBoxFor(x => x.NumberOfMobilityUnits, new { @class = "input-number form-control input-building-summary w-auto input-tight", @MaxLength = "50" })
                            </div>
                        </div>

                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">
                                Number of Communication Units
                            </div>
                            <div class="fw-semibold">
                                @Html.TextBoxFor(x => x.NumberOfCommunicationUnits, new { @class = " input-number form-control input-building-summary w-auto input-tight", @MaxLength = "50" })
                            </div>
                        </div>

                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">
                                Number of Adaptable Units
                            </div>
                            <div class="fw-semibold">
                                @Html.TextBoxFor(x => x.NumberOfAdaptableUnits, new { @class = " input-number form-control input-building-summary w-auto input-tight", @MaxLength = "5" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">
                                Number of Floors in Buildings
                            </div>
                            <div class="fw-semibold">
                                @Html.TextBoxFor(x => x.NumberOfFloors, new { @class = "input-number form-control NumberOfFloors input-building-summary w-auto input-tight", @MaxLength = "5" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">
                                Elevator?
                            </div>
                            <div class="fw-semibold">
                                <spam class="radio-building-summary-lable">
                                    @(Model.IsElevator ? "Yes" : "No")
                                </spam>
                                <div class="input-group yesno_radio radio-building-summary-edit">
                                    <div class="custom-control custom-radio" aria-labelledby="s_IsElevator1" style="margin-right:10px;">
                                        @Html.RadioButtonFor(model => model.IsElevator, "true", new { @id = "s_IsElevator1", @class = "radio-building-summary custom-control-input" })
                                        <label class="custom-control-label" for="s_IsElevator1">Yes</label>
                                    </div>
                                    <div class="custom-control custom-radio " aria-labelledby="s_IsElevator2">
                                        @Html.RadioButtonFor(model => model.IsElevator, "false", new { @id = "s_IsElevator2", @class = " radio-building-summary custom-control-input" })
                                        <label class="custom-control-label" for="s_IsElevator2">No</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row gy-3 gx-5 mt-1">
                        <div class="col-12 col-sm-6 col-lg-2">
                            <div class=" text-secondary mb-1">
                                Number of Parkings
                            </div>
                            <div class="fw-semibold">
                                @Html.TextBoxFor(x => x.NumberOfParkings, new { @class = "input-number form-control input-building-summary w-auto ", @MaxLength = "5" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-lg-4">
                            <div class=" text-secondary mb-1 text-wrap">
                                Will Parking be provided for Each Residential Dwelling Unit?
                            </div>
                            <div class="fw-semibold">
                                <spam class="radio-building-summary-lable">
                                    @(Model.ParkingAvailableAtbuildingLevel ? "Yes" : "No")
                                </spam>
                                <div class="input-group yesno_radio radio-building-summary-edit">
                                    <div class="custom-control custom-radio" aria-labelledby="s_ParkingAvailableAtbuildingLevel1" style="margin-right:10px;">
                                        @Html.RadioButtonFor(model => model.ParkingAvailableAtbuildingLevel, "true", new { @id = "s_ParkingAvailableAtbuildingLevel1", @class = "radio-building-summary custom-control-input" })
                                        <label class="custom-control-label" for="s_ParkingAvailableAtbuildingLevel1">Yes</label>
                                    </div>
                                    <div class="custom-control custom-radio " aria-labelledby="s_ParkingAvailableAtbuildingLevel2">
                                        @Html.RadioButtonFor(model => model.ParkingAvailableAtbuildingLevel, "false", new { @id = "s_ParkingAvailableAtbuildingLevel2", @class = " radio-building-summary custom-control-input" })
                                        <label class="custom-control-label" for="s_ParkingAvailableAtbuildingLevel2">No</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </form>
        </div>
    </div>

    <div class="k-grid " style="margin-top: 10px; margin-bottom: 0px;">
        <div class="k-header k-grid-toolbar ">
            <span class="k-grid-header-title">LADBS Building Permit Info</span>
            <img src="~/Images/question-circle.svg" class="question-mark-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" title="Double click permit numbers below to view LADBS details" />
        </div>
        <div>
            <div class="d-flex justify-content-between">
                <div style="float: inline-start;padding-left: 2em;padding-top: 1em;padding-bottom: 2em; max-width:670px;">
                    <table>
                        <tbody>
                            <tr>
                                <td style="border: 0px;">
                                    <label for="LADBS_PermitNumber" >Permit #:</label>
                                </td>
                                <td style="border: 0px;">
                                    <input id="LADBS_PermitNumber" class="input-number form-control" style="width: 200px;">
                                </td>
                                <td style="border: 0px;">
                                    <button id="linkPermitNumber" class="btn btn btn-primary" style="/* margin-left: 1em; */width: 250px;" onclick="LadbsInformation.linkPermitNumber()">Query Permit Number</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div id="invalid-permit-message" style="display: none; width:100%; padding-top:10px;"></div>
                    <div id="LADBSerror" class="text-danger" style="padding:10px 0 0 60px;" hidden> </div>
                </div>
@*                 <div style="float: inline-end;padding-right: 1em;padding-top: 1em;padding-bottom: 2em;">
                    <button id="syncPermitNumbers" class="btn btn btn-primary" onclick="LadbsInformation.syncPermitNumbers()">Sync All Permit Numbers</button>
                    <img src="~/Images/question-circle.svg" class="question-mark-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" title="Uses all permit numbers saved onto this building. (Original, Prior, Current, Historic, Conversion)" />
                </div> *@
            </div>


        </div>

        <table id="dtPermitNumberData"></table>

        @*show loader*@
        <div id="loaderOverlay">
            <span id="blockUIMessage">
                <i class="fas fa-spinner fa-spin"></i> Please wait...
            </span>
        </div>



        <div class="permit-number-buttons">
            <button id="updatePermitNumber" class="btn btn btn-primary" style="margin-left: 1em;" onclick="LadbsInformation.updatePermitNumber()">Update Permit Number</button>
            <button id="deletePermitNumber" class="btn btn btn-primary" style="margin-left: 1em;" onclick="LadbsInformation.deletePermitNumber()">Delete Permit Number</button>
        </div>
    </div>


 @* Parking Information starts from here *@

    <div class="k-grid" style="margin-top: 10px; margin-bottom: 0px;">
        <div class="k-header k-grid-toolbar ">
            <span class="k-grid-header-title"> Parking Information</span>
            <button id="editParkingInfo" class="k-button k-button-icontext k-grid-add no-access btn btn-primary btn-sm" role="button" role-access="true" onclick="ParkingInformation.edit()">Edit Parking Information</button>
            <button id="cancelEditParking" class="k-button k-button-icontext k-grid-add" style="margin-left :15px;" role="button" onclick="ParkingInformation.cancel()">Cancel</button>
            <button id="updateBuildingParking" class="k-button k-button-icontext k-grid-add" role="button" onclick="ParkingInformation.update()">Update</button>
        </div>
    </div>



    <div class="hide-hover">
        <form id="ParkingInfoForm" >

            <div class="container-fluid">
                <h5 class="fw-bold pt-4 ps-7 mb-3">Residential Parking</h5>
                <!-- Information layout -->
                <div class="row gy-3 gx-5 border-bottom">
                    <div class="col-12 col-sm-6 col-lg-4">
                        <div class=" text-secondary mb-1">
                            <label class=form-label w-100 d-block text-wrap">Will Parking be provided for Each Residential Dwelling Unit?</label>
                        </div>
                        <div class="fw-semibold">

                            <div class="input-group yesno_radio" style="width: 115px;border:none; margin:10px 0px; ">
                                <div class="custom-control custom-radio" aria-labelledby="s_parking1" style="margin-right:10px;">
                                    @Html.RadioButtonFor(model => model.ParkingAvailableAtbuildingLevel, "true", new { @id = "s_parking1", @class = "radio-parking custom-control-input" })
                                    <label class="custom-control-label" for="s_parking1">Yes</label>
                                </div>
                                <div class="custom-control custom-radio " aria-labelledby="s_parking2">
                                    @Html.RadioButtonFor(model => model.ParkingAvailableAtbuildingLevel, "false", new { @id = "s_parking2", @class = " radio-parking custom-control-input" })
                                    <label class="custom-control-label" for="s_parking2">No</label>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Residential Parking
                           
                        </div>
                        <div class="fw-semibold">

                            @Html.TextBoxFor(x => x.ResindentialSpaces, new { @class = "form-control residentialSpaces input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                            @Html.HiddenFor(x => x.PropSnapshotID)

                        </div>
                    </div>

                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Accessible Parking
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.AccessibleSpaces, new { @class = "form-control residentialSpaces input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>

                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Van Accessible Parkin
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.VanAccessibleSpaces, new { @class = "form-control residentialSpaces input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                   
                </div>


                <div class="row gy-3 gx-5 ">
                    <div class="col-12 col-sm-12 col-lg-12">
                        Total Residential Parking Spaces
                 
                        @Html.TextBoxFor(x => x.TotalResidentialParking, new { @class = "form-control residentialSpacesTotal input-parking-total", @readonly = "readonly", style = "width: 75px;" })
                    </div>
                </div>

                <h5 class="fw-bold pt-4 ps-7 mb-3">Residential Electric Vehicle Charging Stations</h5>
                <div class="row gy-3 gx-5 border-bottom">
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Electric Vehicle Charging Station
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.ElectricVehicleChargingStations, new { @class = "form-control chargingStations input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Van Accessible Charging Station
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.VanAccessibleChargingStations, new { @class = "form-control chargingStations input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Standard Accessible Charging Station
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.StandardAccessibleChargingStations, new { @class = "form-control chargingStations input-parking  input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Ambulatory Charging Station
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.AmbulatoryChargingStations, new { @class = "form-control chargingStations input-parking  input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                </div>


                <div class="row gy-3 gx-5 ">
                    <div class="col-12 col-sm-12 col-lg-12">
                        Total Number of Electric Vehicle Charging Stations

                        @Html.TextBoxFor(x => x.TotalNumberofElectricVehicleChargingStations, new { @class = "form-control chargingStationsTotal input-parking-total", @readonly = "readonly", style = "width: 75px;" })
                    </div>
                </div>

                <h5 class="fw-bold pt-4 ps-7 mb-3">Commercial Parking</h5>

                <div class="row gy-3 gx-5 border-bottom">
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Commercial Parking Spaces
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.StandardCommercialSpaces, new { @class = "form-control comercialSpaces input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Commercial Accessible Parking Spaces
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.CommercialAccessibleSpaces, new { @class = "form-control comercialSpaces input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Commercial Van Accessible Parking Spaces
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.CommercialVanAccessibleSpaces, new { @class = "form-control comercialSpaces input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                </div>

                <div class="row gy-3 gx-5 ">
                    <div class="col-12 col-sm-12 col-lg-12">
                        Total Commercial Parking Spaces

                        @Html.TextBoxFor(x => x.TotalCommercialParking, new { @class = "form-control comercialSpacesTotal input-parking-total", @readonly = "readonly", style = "width: 75px;" })
                        
                    </div>
                </div>

                <h5 class="fw-bold pt-4 ps-7 mb-3">Commercial Vehicle Charging Stations</h5>

                <div class="row gy-3 gx-5 border-bottom">
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Commercial Vehicle Charging Stations
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.CommercialVehicleChargingStations, new { @class = "form-control commercialcharging input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Commercial Van Accessible Charging Stations
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.CommercialElectricVanAccessibleChargingStation, new { @class = "form-control commercialcharging input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Commercial Standard Accessible Charging Stations
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.CommercialElectricStandardAccessibleChargingStation, new { @class = "form-control commercialcharging input-parking input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-lg-2">
                        <div class=" text-secondary mb-1">
                            Commercial Ambulatory Charging Stations
                        </div>
                        <div class="fw-semibold">
                            @Html.TextBoxFor(x => x.CommercialElectricAmbulatoryChargingStation, new { @class = "form-control commercialcharging input-parking  input-tight show-border", @MaxLength = "7", style = "width: 75px;" })
                        </div>
                    </div>
                </div>

                <div class="row gy-3 gx-5 ">
                    <div class="col-12 col-sm-12 col-lg-12">
                        Total Number of Commercial Charging Stations

                        @Html.TextBoxFor(x => x.TotalNumberofCommercialElectricVehicleChargingStations, new { @class = "form-control commercialchargingTotal input-parking-total", @readonly = "readonly", style = "width: 75px;" })
                    </div>
                </div>
        
            </div>

        </form>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var propSnapshotId= '@Model.PropSnapshotID'
        ParkingInformation.init();
        BuildingInformation.initBuildingSummary();
        LadbsInformation.init(propSnapshotId);
        SetRoleAccess(accessType);
    });
</script>
