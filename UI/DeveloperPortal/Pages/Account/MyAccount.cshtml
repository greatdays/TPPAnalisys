@page
@model DeveloperPortal.Pages.Account.MyAccountModel

<div class="container mt-4">
    <div class="card shadow-sm p-4" style="max-width: 900px; margin: auto;">
        <h4 class="mb-4 fw-bold">My Account</h4>

        <div class="alert alert-success d-none" id="successMsg"></div>
            <form id="myAccountForm" method="post">
                @Html.AntiForgeryToken()
                <div class="row g-3">
                    <div style="width:57px;margin-left:16px;">
                        <label>Title <span class="text-danger">*</span></label>
                        <input id="Title" name="Title" class="form-control" value="@Model.Account.Title" />
                        <span class="text-danger small d-none" id="errTitle">Title is required.</span>
                    </div>

                    <div class="form-group col-md-3">
                        <label>First Name <span class="text-danger">*</span></label>
                        <input id="FirstName" name="FirstName" class="form-control" value="@Model.Account.FirstName" />
                        <span class="text-danger small d-none" id="errFirstName">First name is required.</span>
                    </div>

                    <div class="form-group col-md-4">
                        <label>Middle Name</label>
                        <input id="MiddleName" name="MiddleName" class="form-control" value="@Model.Account.MiddleName" />
                    </div>

                    <div class="form-group col-md-3">
                        <label>Last Name <span class="text-danger">*</span></label>
                        <input id="LastName" name="LastName" class="form-control" value="@Model.Account.LastName" />
                        <span class="text-danger small d-none" id="errLastName">Last name is required.</span>
                    </div>

                    <div class="form-group col-md-4">
                        <label>Email <span class="text-danger">*</span></label>
                        <input id="Email" name="EmailId" class="form-control" value="@Model.Account.EmailId" />
                        <span class="text-danger small d-none" id="errEmail">Valid email is required.</span>
                    </div>

                    <div class="form-group col-md-2">
                        <label>Phone Type <span class="text-danger">*</span></label>
                        <select id="PhoneType" name="LutPhoneTypeCd" class="form-control">
                            @foreach (var type in Model.Account.LutPhoneTypeCdList)
                            {
                                @Html.Raw($"<option value='{type.LutPhoneTypeCd}' {(type.LutPhoneTypeCd == Model.Account.LutPhoneTypeCd ? "selected" : "")}>{type.Description}</option>")
                            }
                        </select>
                        <span class="text-danger small d-none" id="errPhoneType">Select a phone type.</span>
                    </div>

                    <div class="form-group col-md-2">
                        <label for="Extension">Extension <span class="text-danger">*</span></label>
                        <input id="Extension" name="PhoneExtension" class="form-control" value="@Model.Account.PhoneExtension" />
                        <span class="text-danger small d-none" id="errExt">Phone Extension is required.</span>
                    </div>

                    <div class="form-group col-md-3">
                        <label>Phone Number <span class="text-danger">*</span></label>
                        <input id="PhoneNumber" name="PhoneNumber" class="form-control" value="@Model.Account.PhoneNumber" />
                        <span class="text-danger small d-none" id="errPhoneNumber">Phone number is required.</span>
                    </div>



                    <div class="form-group col-md-8">
                        <label>Company <span class="text-danger">*</span></label>
                        <input id="CompanyName" name="Company" class="form-control" value="@Model.Account.Company" />
                        <span class="text-danger small d-none" id="errCompany">Company Name is required.</span>
                    </div>

                    <!-- Roles Dropdown -->
                    <div class="form-group col-md-3">
                        <label>Select Role <span class="text-danger">*</span></label>
                        <select id="Roles" name="SelectedRole" class="form-control" data-selected-role="@Model.Account.SelectedRole">
                            @* <option value="">-- Select Account Type --</option> *@

                        </select>
                        <span class="text-danger small d-none" id="errAccountType">Please select an user role.</span>
                    </div>

                    <div class="form-group col-md-12 mt-3">
                        <label>P.O.Box?</label><br />
                        <label><input id="POBoxNo" type="radio" name="IsPostBox" value="false" @(Model.Account.IsPostBox ? "" : "checked") /> No</label>
                        <label><input id="POBoxYes" type="radio" name="IsPostBox" value="true" @(Model.Account.IsPostBox ? "checked" : "") /> Yes</label>
                    </div>


                    <!-- If POBox = No -->
                    <div id="divPOBoxNo" class="form-group col-md-12">
                        <div class="row g-3 mt-1">
                            <div class="col-md-4">
                                <label>Street Number <span class="text-danger">*</span></label>
                                <input id="StreetNumber" name="StreetNum" class="form-control" value="@Model.Account.StreetNum" />
                                <span class="text-danger small d-none" id="errStreetNumber">Street number is required.</span>
                            </div>

                            <div class="form-group col-md-4">
                                <label>Pre Direction <span class="text-danger">*</span></label>
                                <select id="LutPreDirCd" name="LutPreDirCd" class="form-control">
                                    @foreach (var type in Model.Account.LutPreDirCdList)
                                    {
                                        @Html.Raw($"<option value='{type.LutPreDirCD}' {(type.LutPreDirCD == Model.Account.LutPreDirCd ? "selected" : "")}>{type.LutPreDirCD}</option>")
                                    }
                                </select>
                            </div>

                            <div class="form-group col-md-3">
                                <label>Street Name <span class="text-danger">*</span></label>
                                <input id="StreetName" name="StreetName" class="form-control" value="@Model.Account.StreetName" />
                                <span class="text-danger small d-none" id="errStreetName">Street name is required.</span>
                            </div>

                            <div class="form-group col-md-4">
                                <label>Street Type <span class="text-danger">*</span></label>
                                <select id="LutStreetTypeCd" name="LutStreetTypeCd" class="form-control">
                                    @foreach (var type in Model.Account.LutStreetTypeList)
                                    {
                                        @Html.Raw($"<option value='{type.LutStreetTypeCd}' {(type.LutStreetTypeCd == Model.Account.LutStreetTypeCd ? "selected" : "")}>{type.LutStreetTypeCd}</option>")
                                    }
                                </select>
                            </div>

                            <div class="form-group col-md-4">
                                <label>Unit Number</label>
                                <input id="UnitNumber" name="UnitNumber" class="form-control" value="@Model.Account.UnitNumber" />
                                @* <span class="text-danger small d-none" id="errZipCode">Unit  is required.</span> *@
                            </div>
                        </div>
                    </div>

                    <!-- If POBox = Yes -->
                    <div id="divPOBoxYes" class="form-group col-md-11 d-none mt-3">
                        <label>P.O.Box Number <span class="text-danger">*</span></label>
                        <input id="POBoxNumber" name="PostBoxNum" class="form-control" value="@Model.Account.PostBoxNum" />
                        <span class="text-danger small d-none" id="errPOBoxNumber">PO Box number is required.</span>
                    </div>

                    <!-- Common fields -->
                    <div class="form-group col-md-4">
                        <label>City <span class="text-danger">*</span></label>
                        <input id="City" name="City" class="form-control" value="@Model.Account.City" />
                        <span class="text-danger small d-none" id="errCity">City is required.</span>
                    </div>

                    <div class="form-group col-md-4">
                        <label>State <span class="text-danger">*</span></label>
                        <select id="LutStateCD" name="LutStateCD" class="form-control">
                            @foreach (var type in Model.Account.LutStateCDList)
                            {
                                @Html.Raw($"<option value='{type.LutStateCd}' {(type.LutStateCd == Model.Account.LutStateCD ? "selected" : "")}>{type.Description}</option>")
                            }
                        </select>
                        <span class="text-danger small d-none" id="errState">State is required.</span>
                    </div>

                    <div class="form-group col-md-3">
                        <label>Zip Code <span class="text-danger">*</span></label>
                    <input id="ZipCode" name="Zipcode" class="form-control" value="@Model.Account.Zipcode" />
                        <span class="text-danger small d-none" id="errZipCode">Zip code is required.</span>
                    </div>

                    <div class="form-group col-12 text-end mt-4">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>

                </div>
            </form>
    </div>
</div>


@section Scripts {
    <script>
        
            function togglePOBoxSection() {
                    const isPOBoxYes = document.getElementById("POBoxYes").checked;

                    const divPOBoxYes = document.getElementById("divPOBoxYes");
                    const divPOBoxNo = document.getElementById("divPOBoxNo");

                    const poBoxInput = document.getElementById("POBoxNumber");

                    // Physical address fields
                    const streetNum = document.getElementById("StreetNumber");
                    const preDir = document.getElementById("LutPreDirCd");
                    const streetName = document.getElementById("StreetName");
                    const streetType = document.getElementById("LutStreetTypeCd");
                    const unitNumber = document.getElementById("UnitNumber");

                    // Toggle sections
                    divPOBoxYes.classList.toggle("d-none", !isPOBoxYes);
                    divPOBoxNo.classList.toggle("d-none", isPOBoxYes);

                    if (isPOBoxYes) {
                        // PO Box selected — clear physical address fields
                        streetNum.value = "";
                        preDir.selectedIndex = 0; // Reset dropdown to first option
                        streetName.value = "";
                        streetType.selectedIndex = 0;
                        unitNumber.value = "";
                    } else {
                        // Physical address selected — clear PO Box field
                        poBoxInput.value = "";
                    }
                }
            function BindValidationEvents() {
            SetMaxLength('FirstName', 100);
            SetMaxLength('MiddleName', 100);
            SetMaxLength('LastName', 100);
            SetMaxLength('CompanyName', 100);
            SetMaxLength('Title', 50);
            SetMaxLength('Extension', 5);
            SetMaxLength('UnitNumber', 20);
            SetMaxLength('City', 20);

            $('#FirstName,#MiddleName,#LastName').on('keyup', function (e) {
                var ctlId = $(this).attr('id');
                var charCode = !event.charCode ? event.which : event.charCode;
                ValidateName(ctlId, charCode);
            });

            $('#Email').on('blur', function () {
                var ctlId = $(this).attr('id');
                ValidateEmail(ctlId);
            });

            $('#CompanyName,#Title').on('blur', function () {
                var ctlVal = $(this).val();
                if (ctlVal !== '') {
                    $(this).next('.text-danger-custom').remove();
                }
            });

            $('#PhoneNumber').mask('(999)999-9999');
            $('#ZipCode,#Extension').mask('99999');

            $('#PhoneNumber').on('keyup', function () {
                ValidatePhone('PhoneNumber');
            });

            $('#PhoneType').on('change', function () {
                ValidatePhoneType('PhoneType');
            });
        }

            // This runs on submit — checks required fields
            function ValidateMyAccountOnSubmit() {
            let isValid = true;
                        // Account Type validation
            if (!$('#Roles').val()) {
                $('#errAccountType').removeClass('d-none');
                isValid = false;
            } else {
                $('#errAccountType').addClass('d-none');
            }


            // First Name
            if (!$('#FirstName').val().trim()) {
                $('#errFirstName').removeClass('d-none');
                isValid = false;
            } else {
                $('#errFirstName').addClass('d-none');
            }

            // Last Name
            if (!$('#LastName').val().trim()) {
                $('#errLastName').removeClass('d-none');
                isValid = false;
            } else {
                $('#errLastName').addClass('d-none');
            }

            // Email
            if (!$('#Email').val().trim()) {
                $('#errEmail').removeClass('d-none').text("Please enter your email.");
                isValid = false;
            } else {
                $('#errEmail').addClass('d-none');
            }


            // Phone Number
            if (!$('#PhoneNumber').val().trim()) {
                $('#errPhoneNumber').removeClass('d-none');
                isValid = false;
            } else {
                $('#errPhoneNumber').addClass('d-none');
            }

            // Phone Type
            if (!$('#PhoneType').val()) {
                $('#errPhoneType').removeClass('d-none');
                isValid = false;
            } else {
                $('#errPhoneType').addClass('d-none');
            }

            // Street / PO Box validation depending on selection
            if ($('#POBoxYes').is(':checked')) {
                console.log("yes checked ");
                if (!$('#POBoxNumber').val().trim()) {
                    $('#errPOBoxNumber').removeClass('d-none');
                    isValid = false;
                } else {
                    $('#errPOBoxNumber').addClass('d-none');
                }
            } else {
                   console.log("not checked ");
                if (!$('#StreetNumber').val().trim()) {
                    $('#errStreetNumber').removeClass('d-none');
                    isValid = false;
                } else {
                    $('#errStreetNumber').addClass('d-none');
                }

                if (!$('#StreetName').val().trim()) {
                    $('#errStreetName').removeClass('d-none');
                    isValid = false;
                } else {
                    $('#errStreetName').addClass('d-none');
                }
            }
            //Company
             if (!$('#CompanyName').val().trim()) {
                $('#errCompany').removeClass('d-none');
                isValid = false;
            } else {
                $('#errCompany').addClass('d-none');
            } 
            //Tital
             if (!$('#Title').val().trim()) {
                $('#errTitle').removeClass('d-none');
                isValid = false;
            } else {
                $('#errTitle').addClass('d-none');
            } 
            //Extension
             if (!$('#Extension').val().trim()) {
                $('#errExt').removeClass('d-none');
                isValid = false;
            } else {
                $('#errExt').addClass('d-none');
            }
            // City
            if (!$('#City').val().trim()) {
                $('#errCity').removeClass('d-none');
                isValid = false;
            } else {
                $('#errCity').addClass('d-none');
            }

            // State
            if (!$('#LutStateCD').val()) {
                $('#errState').removeClass('d-none');
                isValid = false;
            } else {
                $('#errState').addClass('d-none');
            }

            // Zip Code
            if (!$('#ZipCode').val().trim()) {
                $('#errZipCode').removeClass('d-none');
                isValid = false;
            } else {
                $('#errZipCode').addClass('d-none');
            }

            return isValid;
        }
            //Get the Roles
            function FetchingRoles(){
                 $.ajax({
                    url: APPURL + "Account/GetUserRoleLookupData",
                    type: 'GET',
                    async: false,
                    dataType: 'json',
                    contentType: 'application/json',
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    success: function (data) {
                        var rolesArray = (typeof data === 'string') ? JSON.parse(data) : data;

                        var select = $('#Roles');
                      //  select.find('option:not(:first)').remove();

                        $.each(rolesArray, function (index, item) {
                            select.append('<option value="' + item.RoleName + '">' + item.RoleName + '</option>');
                        });

                        // ✅ Set the selected value
                        var selectedRole = select.data('selected-role');
                        if (selectedRole) {
                            select.val(selectedRole);
                        }
                    },

                    error: function (xhr) {
                        console.error(" Error fetching roles:", xhr.responseText);
                    }
                });
            }

                $(document).ready(function () {
                        togglePOBoxSection();
                        BindValidationEvents();
                        FetchingRoles();



                 // Bind change event to radio buttons
                $('input[name="IsPostBox"]').on('change', togglePOBoxSection);
                    $('#myAccountForm').on('submit', function (e) {
                    e.preventDefault();
                   if (!ValidateMyAccountOnSubmit()) {
                        $("#loadingOverlay").hide();
                        console.log("Inside Method");
                        return; //stop submission
                   }
                   console.log("Outside Method");

                var token = $('input[name="__RequestVerificationToken"]').val();

                var formData = {};
                $(this).serializeArray().forEach(function (item) {
                    formData[item.name] = item.value;
                });
                formData.__RequestVerificationToken = token;

                $.ajax({
                    url:APPURL+ 'Account/MyAccount?handler=Update',
                    type: 'POST',
                    data: formData,
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    headers: {
                        'RequestVerificationToken': token, 
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (res) {
                        console.log("Success", res);
                        $("#successMsg").text("Account updated successfully!").removeClass("d-none");
                    },
                    error: function (xhr) {
                        console.error("❌ Error", xhr.status, xhr.responseText);
                    }
                });
            });
        });
    </script>
}