@model DeveloperPortal.Domain.FundingSource.FundingSourcePageViewModel
@using DeveloperPortal.Domain.FundingSource

<style>
	.card.penal-details.backgroundwhite.dataTable-changes.master_my_team_widget.tabepenal > .card-body.table-content {
		background: transparent !important;
		box-shadow: inherit !important;
	}

	.activey-logdiv .tab-content.activity-log-tab-view-133 {
		background: transparent;
		box-shadow: initial !important;
		border: 0;
	}

	.activey-logdiv .card.penal-details.backgroundwhite.dataTable-changes.Comments-WorkLog {
		margin: 0;
	}

	.activey-logdiv ul.nav.nav-pills.comm-tabs {
		margin-top: 15px !important;
		padding: 0;
		/*border-bottom: 1px solid #eee;*/
		margin: 0px 10px 0 10px;
	}

	.activey-logdiv .table td, .activey-logdiv .table th {
		text-align: left !important;
	}


	.worklog-execute-full-name {
		font-size: 16px;
		font-weight: bold;
		margin-bottom: 5px;
	}

	table.tbl-activity-log-tile.dataTable tr {
		background: #f5f5f5;
		margin-bottom: 10px;
		margin-top: 5px;
		box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.2);
		border-radius: 0;
		border: 0px solid rgba(0, 0, 0, 0.125) !important;
		display: flex;
	}

		table.tbl-activity-log-tile.dataTable tr td:first-child {
			text-align: left;
			border-right: 1px solid #afbabf;
			padding: 10px;
			max-width: 270px;
			width: 100%;
		}

		table.tbl-activity-log-tile.dataTable tr td:last-child {
			width: 100%;
			text-align: left;
			padding: 10px;
		}

	.activemainclass {
		display: flex;
		align-items: center;
		margin-bottom: 10px;
		border-bottom: 1px solid #eee;
	}

		.activemainclass .btn.btn-primary {
			margin-top: 12px;
			padding: 5px 12px;
		}

	.table.tbl-activity-log-tile.dataTable {
		margin-bottom: 0;
	}

	table.tbl-activity-log-tile.dataTable tr:last-child {
		margin-bottom: 0px;
	}
</style>
<div class="row">
	@Html.HiddenFor(model => model.CaseId)
	@Html.HiddenFor(model => model.ProjectId)
	
	<div class="col-md-12">


		<div class="dataTable-changes master_my_team_widget tabepenal">
@* 				<div class="k-grid " style="margin-bottom: 0px;">
					<div class="k-header k-grid-toolbar ">
						<span class="k-grid-header-title">Funding Source</span>
						<button class="k-button k-button-icontext k-grid-add no-access" type="button" id="uploadFundingSourceBtn" style="float:right; margin-right:1%;" data-original-title="" title="">  Add Funding Source</button>
					
					</div>
				</div> *@

			<div class="border-bottom pb-2 mb-3">
				<div class="row align-items-center">
					<div class="col-md-6 col-12">
						<h4 class="mb-0">Funding Source</h4>
					</div>
					<div class="col-md-6 col-12 text-md-end mt-2 mt-md-0">
						<button id="uploadFundingSourceBtn"
								class="btn btn-primary"
								type="button">
							Add Funding Source
						</button>
					</div>
				</div>
			</div>
			
			<div class="col-md-12 k-box-body">
				<table id="fundingSourceGrid" class="table table-bordered table-striped">
					<thead>
						<tr>
							<th>Funding Source</th>
							<th>File Name</th>
							<th>Notes</th>
							<th>MU (%)</th>
							<th>HV (%)</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.FundingSources)
						{
							<tr>

								<td>@Html.DisplayFor(modelItem => item.FundingSource)</td>
								<td>@Html.DisplayFor(modelItem => item.FileName)</td>
								<td class="text-wrap">@Html.DisplayFor(modelItem => item.Notes)</td>
								<td>@Html.DisplayFor(modelItem => item.MU_Unit)</td>
								<td>@Html.DisplayFor(modelItem => item.HV_Unit)</td>
								<td style="width:10%">
									<button class="editbtn btn k-grid-edit btn-sm btn-action" data-id="@item.FundingSourceId" type="button" onclick="FundingSource.EditFundingSource(@item.FundingSourceId, @Model.ProjectId)">
										<i class="fas fa-edit"></i>
									</button>
									<a href="javascript:void(0)"
									   onclick="downloadFileWithProgress('@Url.Action("DownloadDocument", "FundingSource", new { fileName = item.FileName, filePath = item.Link })', '@item.FileName')"
									   class="editbtn btn k-grid-edit btn-sm btn-action" title="Download @item.FileName">
										<i class="fas fa-download"></i>
									</a>
									<button class="deletebtn btn btn-sm btn-action" data-id="@item.FundingSourceId" type="button" onclick="FundingSource.DeleteFundingSource(@item.FundingSourceId,'@item.Link')">
										<i class="fas fa-trash-alt"></i>
									</button>
									@* <a href="javascript:void(0)" type="button"
									  onclick="DownloadDocument('@item.FileName', '@item.Link')"
									   class="btn btn-outline-secondary btn-sm" title="Download @item.FileName">
										<i class="fas fa-download"></i>
									</a> *@
								</td>
							</tr>
						}
					</tbody>
				</table>

			</div>

		</div>
	</div>
</div>


<div class="modal fade" id="editFundingSourceModal" tabindex="-1" role="dialog" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="AddFileModalLabel">Edit Funding Source</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
			</div>
		</div>
	</div>
</div>

<script>



	 function downloadFileWithProgress(url, fileName) {
		   LoadingOverlay.show();
		   
		fetch(url)
			.then(response => {
				if (!response.ok) {
					throw new Error(`Download failed: ${response.status}`);
				}
				return response.blob();
			})
			.then(blob => {
				// Create and trigger download
				const downloadUrl = window.URL.createObjectURL(blob);
				const a = document.createElement('a');
				a.href = downloadUrl;
				a.download = fileName;
				document.body.appendChild(a);
				a.click();

				// Cleanup
				document.body.removeChild(a);
				window.URL.revokeObjectURL(downloadUrl);
				 
				// Hide loading overlay
				LoadingOverlay.hide();
			})
			.catch(error => {
				 
				console.error('Download error:', error);
				LoadingOverlay.hide();
				alert('Download failed');
			});
	}


	
		$(document).ready(function () {
			 $('#fundingSourceGrid').DataTable({
				 "bPaginate": true,
				 "bSort": true,
				 "pageLength": 10,
				 "bInfo": true,
				 "bRetrieve": true,
				 "bFilter": true,
				 "bLengthChange": true,
				 "LengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]]
		 });

	 });





			$(document).on('input', '#MU_Unit, #HV_Unit', function () {
		var id = this.id === 'MU_Unit' ? 'muUnitError' : 'hvUnitError';
		validateUnitField(this, id);
	});

	$('#uploadFundingSourceBtn').on('click', function () {
		//var id = $(this).data('id'
		
		var id = $('#CaseId').val();
		var ProjectId=$('#ProjectId').val();
		$('#editFundingSourceModal .modal-body').empty();
		const url = APPURL + 'FundingSource/AddFundingSource';
		// const url =  '@Url.Action("AddFundingSource", "FundingSource", new { area = "Construction" })?Id=' + id;

		const data = { id: id,ProjectId:ProjectId };

		AjaxCommunication.CreateRequest(this.window, "GET", url, "html", data,
			function (result) {
				$('#editFundingSourceModal .modal-body').empty();
				$('#editFundingSourceModal .modal-body').html(result);
				$('#editFundingSourceModal').modal('show');
			}, null, true, null, false);
	})



	   function validateUnitField(inputElem, errorId) {
		if (!inputElem) return true; // element not present => treat as valid

		var raw = inputElem.value.trim();
		var err = document.getElementById(errorId);

		// empty is allowed
		if (raw === "") {
			err.style.display = "none";
			inputElem.classList.remove("is-invalid");
			return true;
		}

		// allow only digits; sanitize if needed
		if (!/^\d+$/.test(raw)) {
			// remove non-digits
			raw = raw.replace(/\D/g, '');
			inputElem.value = raw;
			if (raw === "") {
				err.style.display = "none";
				inputElem.classList.remove("is-invalid");
				return true;
			}
		}

		var num = parseInt(raw, 10);
		if (isNaN(num) || num < 0 || num > 100) {
			err.innerText = "Number must be between 0 and 100 (or leave blank).";
			err.style.display = "block";
			inputElem.classList.add("is-invalid");
			return false;
		}

		// valid
		err.innerText = "";
		err.style.display = "none";
		inputElem.classList.remove("is-invalid");
		return true;
	}



		 

	 function Reoladdata() {
		debugger;
		var form = $(this)[0];
		var fundingSource = $('#FundingSource').val().trim();
			var fileInput = $('#addFileUploader')[0].files.length;
		var existingFileName = $('#FileName').val().trim(); // old file
		var isValid = true;
		var firstInvalid = null;

		var notes = $('#Notes').val().trim();
		var mu = document.getElementById('MU_Unit');
		var hv = document.getElementById('HV_Unit');

		var okMu = validateUnitField(mu, 'muUnitError');
		if (!okMu) firstInvalid = firstInvalid || mu;

		var okHv = validateUnitField(hv, 'hvUnitError');
		if (!okHv) firstInvalid = firstInvalid || hv;

		if (firstInvalid) {
			e.preventDefault();
			firstInvalid.focus();
			return false;
		}


		// Reset previous errors
		$('#FundingSource').removeClass('is-invalid');
		$('#addFileUploader').removeClass('is-invalid');

		// Validate FundingSource
		if (fundingSource === "") {
			$('#FundingSource').addClass('is-invalid');
			if (!firstInvalid) firstInvalid = $('#FundingSource');
			isValid = false;
		}

		// Validate file: either new file OR existing file required
		if (fileInput === 0 && existingFileName === "") {
			$('#addFileUploader').addClass('is-invalid');
			if (!firstInvalid) firstInvalid = $('#addFileUploader');
			isValid = false;
		}
		
					var allowedExtensions = [
				".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx",
				".txt", ".jpg", ".jpeg", ".png", ".gif"
			];


		if (fileInput > 0) { // Only validate if a new file is selected
			var file = $('#addFileUploader')[0].files[0];
			var fileName = file.name.toLowerCase();
			var extension = '.' + fileName.split('.').pop();

			// Validate extension
			if (!allowedExtensions.includes(extension)) {
				$('#addFileUploader').addClass('is-invalid');
				if (!firstInvalid) firstInvalid = $('#addFileUploader');
				isValid = false;
			}

			
		}


		if (notes.length > 250) {
			$('#Notes').addClass('is-invalid')
				.after('<small id="notesError" class="text-danger">Maximum 250 characters allowed.</small>');
			if (!firstInvalid) firstInvalid = $('#Notes');
			isValid = false;
		}


		// Focus first invalid field if any
		if (!isValid) {
			firstInvalid.focus();
			return;
		}

		var form = $('#editFundingSourceForm')[0];
		var formData = new FormData(form);
		$('#editFundingSourceModal').modal('hide');
		
		$.ajax({
			url: form.action,
			type: "POST",
			data: formData,
			processData: false,
			contentType: false,
			success: function (response) {


				var CaseID = $('#CaseId').val();
				var ProjectId=$('#ProjectId').val();
				const url = APPURL + 'FundingSource/GetFundingSourcesById';
				const data = { caseId: CaseID, projectId:ProjectId };
				AjaxCommunication.CreateRequest(this.window, "GET", url, "html", data,
					function (result) {
						$("#divFundingSource").html(result);
					}, null, true, null, false);


				$('#editFundingSourceModal').modal('hide');

			},
			error: function () {
				alert('An error occurred while saving data.');
			}
		});
	}



			
		$(document).on('input', '#MU_Unit, #HV_Unit', function () {
			var id = this.id === 'MU_Unit' ? 'muUnitError' : 'hvUnitError';
			validateUnitField(this, id);
		});

		// The Delete button click handler
		$(document).on('click', '.delete-btn', function() {
			var id = $(this).data('id');
			if (confirm('Are you sure you want to delete this record?')) {
				$.post('/FundingSource/Delete/' + id, function(response) {
					if (response.success) {
						location.reload();
					} else {
						alert('Error deleting the record.');
					}
				});
			}
		})



</script>
