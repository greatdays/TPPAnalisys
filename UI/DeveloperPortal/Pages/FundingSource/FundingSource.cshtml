@model DeveloperPortal.Domain.FundingSource.FundingSourcePageViewModel
@using DeveloperPortal.Domain.FundingSource

<div class="card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">Funding Sources</h5>
        <button type="button" id="btnAddFundingSource" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add Funding Source
        </button>
    </div>

    <div class="card-body">
        <div id="messageContainer"></div>

        <input type="hidden" id="CaseId" value="@Model.CaseId" />

        <div id="divFundingSourceGrid">
            <table id="fundingSourceTable" class="table table-striped table-bordered align-middle w-100">
                <thead class="table-light">
                    <tr>
                        <th style="width:10%;">Funding Source</th>
                        <th style="width:20%;">File Name</th>
                        <th style="width:20%;">Notes</th>
                        <th style="width:20%;">MU (%)</th>
                        <th style="width:10%;">HV (%)</th>
                        <th style="width:10%;">Created Date</th>
                        <th style="width:10%;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.FundingSources != null && Model.FundingSources.Any())
                    {
                        foreach (var fs in Model.FundingSources)
                        {
                            <tr>
                                <td>@fs.FundingSource</td>
                                <td>@fs.FileName</td>
                                <td style="word-wrap: break-word;">@fs.Notes</td>
                                <td>@fs.MU_Unit</td>
                                <td>@fs.HV_Unit</td>
                                <td>@fs.CreatedDate?.ToString("MM/dd/yyyy")</td>
                                <td style="width:15%">
                                    <button class="btn btn-sm btn-warning btn-edit" data-id="@fs.FundingSourceId">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger btn-delete" data-id="@fs.FundingSourceId">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>

                                    <a href="javascript:void(0)"
                                       onclick="downloadFileWithProgress('@Url.Action("DownloadDocument", "DMS", new { area = "Document", fileName = fs.FileName, filePath = fs.Link })', '@fs.FileName')"
                                       class="btn btn-outline-secondary btn-sm" title="Download @fs.FileName">
                                        <i class="fas fa-download"></i> 
                                    </a>
                                   @*  <button class="btn btn-sm btn-download" data-id="@fs.Link">
                                        <i class="fas fa fa-download"></i> Download
                                    </button> *@
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@Html.Partial("/Pages/FundingSource/FundingSourcePopUp.cshtml", new FundingSourceViewModel { CaseId = Model.CaseId })
@Html.Partial("~/Pages/FundingSource/_EditFundingSourceModal.cshtml", new FundingSourceViewModel { CaseId = Model.CaseId })

@section Scripts {
    <script src="~/PageScripts/ProjectDetail/FundingSource.js"></script>
}


<!-- Configuration Script -->
<script>
    // Configure DMS with server-side values
    

       function downloadFileWithProgress(url, fileName) {
           LoadingOverlay.show();

        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Download failed: ${response.status}`);
                }
                return response.blob();
            })
            .then(blob => {
                // Create and trigger download
                const downloadUrl = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = downloadUrl;
                a.download = fileName;
                document.body.appendChild(a);
                a.click();

                // Cleanup
                document.body.removeChild(a);
                window.URL.revokeObjectURL(downloadUrl);

                // Hide loading overlay
                LoadingOverlay.hide();
            })
            .catch(error => {
                console.error('Download error:', error);
                LoadingOverlay.hide();
                alert('Download failed');
            });
    }
</script>